48. Rotate Image

You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Note:

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.

Example 1:

Given input matrix = 
[
  [1,2,3],
  [4,5,6],
  [7,8,9]
],

rotate the input matrix in-place such that it becomes:
[
  [7,4,1],
  [8,5,2],
  [9,6,3]
]


time :o(n2)
space : o(1)




class Solution {
    public void rotate(int[][] matrix) {
        int N = matrix.length;
         // Traverse each cycle 
    for (int i = 0; i < N / 2; i++) 
    { 
        for (int j = i; j < N - i - 1; j++) 
        { 
  
            // Swap elements of each cycle 
            // in clockwise direction 
            int temp = matrix[i][j]; 
            matrix[i][j] = matrix[N - 1 - j][i]; 
            System.out.println(matrix[N - 1 - j][i]);
            matrix[N - 1 - j][i] = matrix[N - 1 - i][N - 1 - j]; 
            matrix[N - 1 - i][N - 1 - j] = matrix[j][N - 1 - i]; 
            matrix[j][N - 1 - i] = temp; 
        } 
    } 
    }
}
