Letter Case Permutation
Given a string S, we can transform every letter individually to be lowercase or uppercase to create another string.  Return a list of all possible strings we could create.

Examples:
Input: S = "a1b2"
Output: ["a1b2", "a1B2", "A1b2", "A1B2"]

Input: S = "3z4"
Output: ["3z4", "3Z4"]

Input: S = "12345"
Output: ["12345"]


Space: 2 of n  
N
Time: 2 of n


class Solution {
    public List<String> letterCasePermutation(String S) {
        List<String> res = new ArrayList<>();
        dfs(S, res, "", 0);
        return res;
    }
    private void dfs(String S, List<String> res, String item, int start){
        if (start == S.length()){
            res.add(item);
            return;
        }
        char c = S.charAt(start);
        if (Character.isLetter(c)){
            dfs(S, res, item + Character.toUpperCase(c), start + 1);
            dfs(S, res, item + Character.toLowerCase(c), start + 1);
        }else{
            dfs(S, res, item + c, start + 1);
        }
    }
}
